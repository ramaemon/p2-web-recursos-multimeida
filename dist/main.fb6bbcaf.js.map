{"version":3,"sources":["js/main.js"],"names":["handleIntersection","entries","map","entry","isIntersecting","target","src","dataset","classList","remove","observer","unobserve","images","document","querySelectorAll","IntersectionObserver","forEach","image","observe"],"mappings":"AAAA,SAASA,kBAAkBA,CAACC,OAAO,EAAE;EACnCA,OAAO,CAACC,GAAG,CAAC,UAACC,KAAK,EAAK;IACrB,IAAIA,KAAK,CAACC,cAAc,EAAE;MACxB;MACA;MACAD,KAAK,CAACE,MAAM,CAACC,GAAG,GAAGH,KAAK,CAACE,MAAM,CAACE,OAAO,CAACD,GAAG;MAC3CH,KAAK,CAACE,MAAM,CAACG,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;MACzC;MACAC,QAAQ,CAACC,SAAS,CAACR,KAAK,CAACE,MAAM,CAAC;IAClC;EACF,CAAC,CAAC;AACJ;AAEA,IAAMO,MAAM,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC;AACrD,IAAMJ,QAAQ,GAAG,IAAIK,oBAAoB,CAACf,kBAAkB,CAAC;AAC7DY,MAAM,CAACI,OAAO,CAAC,UAAAC,KAAK;EAAA,OAAIP,QAAQ,CAACQ,OAAO,CAACD,KAAK,CAAC;AAAA,EAAC","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["function handleIntersection(entries) {\n  entries.map((entry) => {\n    if (entry.isIntersecting) {\n      // Item has crossed our observation\n      // threshold - load src from data-src\n      entry.target.src = entry.target.dataset.src;\n      entry.target.classList.remove('lazyload');\n      // Job done for this item - no need to watch it!\n      observer.unobserve(entry.target);\n    }\n  });\n}\n\nconst images = document.querySelectorAll('.lazyload');\nconst observer = new IntersectionObserver(handleIntersection);\nimages.forEach(image => observer.observe(image));"]}